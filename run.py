
from model import HMM
from data import data 

dummy_data = data.dummy(300, 3)     # Generate dummy data to test model with parameters T & M (TODO: Make sure dummy data is random using entropy)
maxIter = 100                       # Define maximum iterations
key = data.train_winwebsec()        # Data class retrieves preprocessed training sets)

model = HMM()                       # Initialize HMM using start_engine method
model.start_engine(key, maxIter)    # Parameters = Observation sequence, Maximum iterations

model.run_model()                 # Run specific algorithms or run complete model.
# print(model.alpha_pass())
# print(model.beta_pass())
# print(model.gamma_pass())           # Runs alpha, beta pass and gamma/digamma calculations. Returns gammas
# model.getTestScore()              # Returns score = SUM(P( observation k, state q | model ))

# tester = model.alpha_beta_tester()
# alpha = tester[0]
# beta = tester[1]

# print("--------- ALPHA TESTER --------- \n", alpha, "\n")
# print("--------- BETA TESTER --------- \n", beta, "\n")